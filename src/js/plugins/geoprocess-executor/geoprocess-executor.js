/*! For license information please see main.js.LICENSE.txt */
var GeoserviceFactory;!function(){var e={660:function(e,t,n){var s;!function(e){!function(t){var s="object"==typeof n.g?n.g:"object"==typeof self?self:"object"==typeof this?this:Function("return this;")(),r=o(e);function o(e,t){return function(n,s){"function"!=typeof e[n]&&Object.defineProperty(e,n,{configurable:!0,writable:!0,value:s}),t&&t(n,s)}}void 0===s.Reflect?s.Reflect=e:r=o(s.Reflect,r),function(e){var t=Object.prototype.hasOwnProperty,n="function"==typeof Symbol,s=n&&void 0!==Symbol.toPrimitive?Symbol.toPrimitive:"@@toPrimitive",r=n&&void 0!==Symbol.iterator?Symbol.iterator:"@@iterator",o="function"==typeof Object.create,i={__proto__:[]}instanceof Array,a=!o&&!i,p={create:o?function(){return A(Object.create(null))}:i?function(){return A({__proto__:null})}:function(){return A({})},has:a?function(e,n){return t.call(e,n)}:function(e,t){return t in e},get:a?function(e,n){return t.call(e,n)?e[n]:void 0}:function(e,t){return e[t]}},w=Object.getPrototypeOf(Function),u="object"==typeof process&&process.env&&"true"===process.env.REFLECT_METADATA_USE_MAP_POLYFILL,l=u||"function"!=typeof Map||"function"!=typeof Map.prototype.entries?function(){var e={},t=[],n=function(){function e(e,t,n){this._index=0,this._keys=e,this._values=t,this._selector=n}return e.prototype["@@iterator"]=function(){return this},e.prototype[r]=function(){return this},e.prototype.next=function(){var e=this._index;if(e>=0&&e<this._keys.length){var n=this._selector(this._keys[e],this._values[e]);return e+1>=this._keys.length?(this._index=-1,this._keys=t,this._values=t):this._index++,{value:n,done:!1}}return{value:void 0,done:!0}},e.prototype.throw=function(e){throw this._index>=0&&(this._index=-1,this._keys=t,this._values=t),e},e.prototype.return=function(e){return this._index>=0&&(this._index=-1,this._keys=t,this._values=t),{value:e,done:!0}},e}();return function(){function t(){this._keys=[],this._values=[],this._cacheKey=e,this._cacheIndex=-2}return Object.defineProperty(t.prototype,"size",{get:function(){return this._keys.length},enumerable:!0,configurable:!0}),t.prototype.has=function(e){return this._find(e,!1)>=0},t.prototype.get=function(e){var t=this._find(e,!1);return t>=0?this._values[t]:void 0},t.prototype.set=function(e,t){var n=this._find(e,!0);return this._values[n]=t,this},t.prototype.delete=function(t){var n=this._find(t,!1);if(n>=0){for(var s=this._keys.length,r=n+1;r<s;r++)this._keys[r-1]=this._keys[r],this._values[r-1]=this._values[r];return this._keys.length--,this._values.length--,t===this._cacheKey&&(this._cacheKey=e,this._cacheIndex=-2),!0}return!1},t.prototype.clear=function(){this._keys.length=0,this._values.length=0,this._cacheKey=e,this._cacheIndex=-2},t.prototype.keys=function(){return new n(this._keys,this._values,s)},t.prototype.values=function(){return new n(this._keys,this._values,o)},t.prototype.entries=function(){return new n(this._keys,this._values,i)},t.prototype["@@iterator"]=function(){return this.entries()},t.prototype[r]=function(){return this.entries()},t.prototype._find=function(e,t){return this._cacheKey!==e&&(this._cacheIndex=this._keys.indexOf(this._cacheKey=e)),this._cacheIndex<0&&t&&(this._cacheIndex=this._keys.length,this._keys.push(e),this._values.push(void 0)),this._cacheIndex},t}();function s(e,t){return e}function o(e,t){return t}function i(e,t){return[e,t]}}():Map,c=u||"function"!=typeof Set||"function"!=typeof Set.prototype.entries?function(){function e(){this._map=new l}return Object.defineProperty(e.prototype,"size",{get:function(){return this._map.size},enumerable:!0,configurable:!0}),e.prototype.has=function(e){return this._map.has(e)},e.prototype.add=function(e){return this._map.set(e,e),this},e.prototype.delete=function(e){return this._map.delete(e)},e.prototype.clear=function(){this._map.clear()},e.prototype.keys=function(){return this._map.keys()},e.prototype.values=function(){return this._map.values()},e.prototype.entries=function(){return this._map.entries()},e.prototype["@@iterator"]=function(){return this.keys()},e.prototype[r]=function(){return this.keys()},e}():Set,f=new(u||"function"!=typeof WeakMap?function(){var e=p.create(),n=s();return function(){function e(){this._key=s()}return e.prototype.has=function(e){var t=r(e,!1);return void 0!==t&&p.has(t,this._key)},e.prototype.get=function(e){var t=r(e,!1);return void 0!==t?p.get(t,this._key):void 0},e.prototype.set=function(e,t){return r(e,!0)[this._key]=t,this},e.prototype.delete=function(e){var t=r(e,!1);return void 0!==t&&delete t[this._key]},e.prototype.clear=function(){this._key=s()},e}();function s(){var t;do{t="@@WeakMap@@"+i()}while(p.has(e,t));return e[t]=!0,t}function r(e,s){if(!t.call(e,n)){if(!s)return;Object.defineProperty(e,n,{value:p.create()})}return e[n]}function o(e,t){for(var n=0;n<t;++n)e[n]=255*Math.random()|0;return e}function i(){var e,t=(e=16,"function"==typeof Uint8Array?"undefined"!=typeof crypto?crypto.getRandomValues(new Uint8Array(e)):"undefined"!=typeof msCrypto?msCrypto.getRandomValues(new Uint8Array(e)):o(new Uint8Array(e),e):o(new Array(e),e));t[6]=79&t[6]|64,t[8]=191&t[8]|128;for(var n="",s=0;s<16;++s){var r=t[s];4!==s&&6!==s&&8!==s||(n+="-"),r<16&&(n+="0"),n+=r.toString(16).toLowerCase()}return n}}():WeakMap);function h(e,t,n){var s=f.get(e);if(_(s)){if(!n)return;s=new l,f.set(e,s)}var r=s.get(t);if(_(r)){if(!n)return;r=new l,s.set(t,r)}return r}function g(e,t,n){if(d(e,t,n))return!0;var s=k(t);return!L(s)&&g(e,s,n)}function d(e,t,n){var s=h(t,n,!1);return!_(s)&&!!s.has(e)}function m(e,t,n){if(d(e,t,n))return y(e,t,n);var s=k(t);return L(s)?void 0:m(e,s,n)}function y(e,t,n){var s=h(t,n,!1);if(!_(s))return s.get(e)}function v(e,t,n,s){h(n,s,!0).set(e,t)}function x(e,t){var n=I(e,t),s=k(e);if(null===s)return n;var r=x(s,t);if(r.length<=0)return n;if(n.length<=0)return r;for(var o=new c,i=[],a=0,p=n;a<p.length;a++){var w=p[a];o.has(w)||(o.add(w),i.push(w))}for(var u=0,l=r;u<l.length;u++)w=l[u],o.has(w)||(o.add(w),i.push(w));return i}function I(e,t){var n=[],s=h(e,t,!1);if(_(s))return n;for(var o=function(e){var t=O(e,r);if(!T(t))throw new TypeError;var n=t.call(e);if(!S(n))throw new TypeError;return n}(s.keys()),i=0;;){var a=F(o);if(!a)return n.length=i,n;var p=a.value;try{n[i]=p}catch(e){try{b(o)}finally{throw e}}i++}}function D(e){if(null===e)return 1;switch(typeof e){case"undefined":return 0;case"boolean":return 2;case"string":return 3;case"symbol":return 4;case"number":return 5;case"object":return null===e?1:6;default:return 6}}function _(e){return void 0===e}function L(e){return null===e}function S(e){return"object"==typeof e?null!==e:"function"==typeof e}function R(e,t){switch(D(e)){case 0:case 1:case 2:case 3:case 4:case 5:return e}var n=3===t?"string":5===t?"number":"default",r=O(e,s);if(void 0!==r){var o=r.call(e,n);if(S(o))throw new TypeError;return o}return function(e,t){if("string"===t){var n=e.toString;if(T(n)&&!S(r=n.call(e)))return r;if(T(s=e.valueOf)&&!S(r=s.call(e)))return r}else{var s;if(T(s=e.valueOf)&&!S(r=s.call(e)))return r;var r,o=e.toString;if(T(o)&&!S(r=o.call(e)))return r}throw new TypeError}(e,"default"===n?"number":n)}function E(e){var t=R(e,3);return"symbol"==typeof t?t:function(e){return""+e}(t)}function P(e){return Array.isArray?Array.isArray(e):e instanceof Object?e instanceof Array:"[object Array]"===Object.prototype.toString.call(e)}function T(e){return"function"==typeof e}function C(e){return"function"==typeof e}function O(e,t){var n=e[t];if(null!=n){if(!T(n))throw new TypeError;return n}}function F(e){var t=e.next();return!t.done&&t}function b(e){var t=e.return;t&&t.call(e)}function k(e){var t=Object.getPrototypeOf(e);if("function"!=typeof e||e===w)return t;if(t!==w)return t;var n=e.prototype,s=n&&Object.getPrototypeOf(n);if(null==s||s===Object.prototype)return t;var r=s.constructor;return"function"!=typeof r||r===e?t:r}function A(e){return e.__=void 0,delete e.__,e}e("decorate",(function(e,t,n,s){if(_(n)){if(!P(e))throw new TypeError;if(!C(t))throw new TypeError;return function(e,t){for(var n=e.length-1;n>=0;--n){var s=(0,e[n])(t);if(!_(s)&&!L(s)){if(!C(s))throw new TypeError;t=s}}return t}(e,t)}if(!P(e))throw new TypeError;if(!S(t))throw new TypeError;if(!S(s)&&!_(s)&&!L(s))throw new TypeError;return L(s)&&(s=void 0),function(e,t,n,s){for(var r=e.length-1;r>=0;--r){var o=(0,e[r])(t,n,s);if(!_(o)&&!L(o)){if(!S(o))throw new TypeError;s=o}}return s}(e,t,n=E(n),s)})),e("metadata",(function(e,t){return function(n,s){if(!S(n))throw new TypeError;if(!_(s)&&!function(e){switch(D(e)){case 3:case 4:return!0;default:return!1}}(s))throw new TypeError;v(e,t,n,s)}})),e("defineMetadata",(function(e,t,n,s){if(!S(n))throw new TypeError;return _(s)||(s=E(s)),v(e,t,n,s)})),e("hasMetadata",(function(e,t,n){if(!S(t))throw new TypeError;return _(n)||(n=E(n)),g(e,t,n)})),e("hasOwnMetadata",(function(e,t,n){if(!S(t))throw new TypeError;return _(n)||(n=E(n)),d(e,t,n)})),e("getMetadata",(function(e,t,n){if(!S(t))throw new TypeError;return _(n)||(n=E(n)),m(e,t,n)})),e("getOwnMetadata",(function(e,t,n){if(!S(t))throw new TypeError;return _(n)||(n=E(n)),y(e,t,n)})),e("getMetadataKeys",(function(e,t){if(!S(e))throw new TypeError;return _(t)||(t=E(t)),x(e,t)})),e("getOwnMetadataKeys",(function(e,t){if(!S(e))throw new TypeError;return _(t)||(t=E(t)),I(e,t)})),e("deleteMetadata",(function(e,t,n){if(!S(t))throw new TypeError;_(n)||(n=E(n));var s=h(t,n,!1);if(_(s))return!1;if(!s.delete(e))return!1;if(s.size>0)return!0;var r=f.get(t);return r.delete(n),r.size>0||f.delete(t),!0}))}(r)}()}(s||(s={}))}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var o=t[s]={exports:{}};return e[s](o,o.exports,n),o.exports}n.d=function(e,t){for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};!function(){"use strict";var e;n.r(s),n.d(s,{Contour:function(){return xe},ElevationOfPoint:function(){return Ce},ElevationOfPointResponseType:function(){return Se},ElevationProfile:function(){return Ze},ElevationProfileGetFeatureInfo:function(){return wt},ElevationProfileResponseType:function(){return Ue},HealthCheck:function(){return ut},WaterRise:function(){return yt}}),n(660),function(e){e[e.Transient=0]="Transient",e[e.Singleton=1]="Singleton",e[e.ResolutionScoped=2]="ResolutionScoped",e[e.ContainerScoped=3]="ContainerScoped"}(e||(e={}));var t=e,r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function o(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function i(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],s=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&s>=e.length&&(e=void 0),{value:e&&e[s++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function a(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var s,r,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(s=o.next()).done;)i.push(s.value)}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return i}function p(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(a(arguments[t]));return e}function w(e){return!!e.useClass}function u(e){return!!e.useFactory}var l=function(){function e(e){this.wrap=e,this.reflectMethods=["get","getPrototypeOf","setPrototypeOf","getOwnPropertyDescriptor","defineProperty","has","set","deleteProperty","apply","construct","ownKeys"]}return e.prototype.createProxy=function(e){var t,n=this,s=!1;return new Proxy({},this.createHandler((function(){return s||(t=e(n.wrap()),s=!0),t})))},e.prototype.createHandler=function(e){var t={};return this.reflectMethods.forEach((function(n){t[n]=function(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];t[0]=e();var r=Reflect[n];return r.apply(void 0,p(t))}})),t},e}();function c(e){return"string"==typeof e||"symbol"==typeof e}function f(e){return"object"==typeof e&&"token"in e&&"transform"in e}function h(e){return!!e.useToken}function g(e){return null!=e.useValue}var d=function(){function e(){this._registryMap=new Map}return e.prototype.entries=function(){return this._registryMap.entries()},e.prototype.getAll=function(e){return this.ensure(e),this._registryMap.get(e)},e.prototype.get=function(e){this.ensure(e);var t=this._registryMap.get(e);return t[t.length-1]||null},e.prototype.set=function(e,t){this.ensure(e),this._registryMap.get(e).push(t)},e.prototype.setAll=function(e,t){this._registryMap.set(e,t)},e.prototype.has=function(e){return this.ensure(e),this._registryMap.get(e).length>0},e.prototype.clear=function(){this._registryMap.clear()},e.prototype.ensure=function(e){this._registryMap.has(e)||this._registryMap.set(e,[])},e}(),m=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t}(d),y=function(){this.scopedResolutions=new Map};var v=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t}(d),x=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t}(d),I=function(){this.preResolution=new v,this.postResolution=new x},D=new Map,_=new(function(){function e(e){this.parent=e,this._registry=new m,this.interceptors=new I}return e.prototype.register=function(e,n,s){var r;if(void 0===s&&(s={lifecycle:t.Transient}),r=function(e){return w(e)||g(e)||h(e)||u(e)}(n)?n:{useClass:n},h(r))for(var o=[e],i=r;null!=i;){var a=i.useToken;if(o.includes(a))throw new Error("Token registration cycle detected! "+p(o,[a]).join(" -> "));o.push(a);var l=this._registry.get(a);i=l&&h(l.provider)?l.provider:null}if((s.lifecycle===t.Singleton||s.lifecycle==t.ContainerScoped||s.lifecycle==t.ResolutionScoped)&&(g(r)||u(r)))throw new Error('Cannot use lifecycle "'+t[s.lifecycle]+'" with ValueProviders or FactoryProviders');return this._registry.set(e,{provider:r,options:s}),this},e.prototype.registerType=function(e,t){return c(t)?this.register(e,{useToken:t}):this.register(e,{useClass:t})},e.prototype.registerInstance=function(e,t){return this.register(e,{useValue:t})},e.prototype.registerSingleton=function(e,n){if(c(e)){if(c(n))return this.register(e,{useToken:n},{lifecycle:t.Singleton});if(n)return this.register(e,{useClass:n},{lifecycle:t.Singleton});throw new Error('Cannot register a type name as a singleton without a "to" token')}var s=e;return n&&!c(n)&&(s=n),this.register(e,{useClass:s},{lifecycle:t.Singleton})},e.prototype.resolve=function(e,t){void 0===t&&(t=new y);var n=this.getRegistration(e);if(!n&&c(e))throw new Error('Attempted to resolve unregistered dependency token: "'+e.toString()+'"');if(this.executePreResolutionInterceptor(e,"Single"),n){var s=this.resolveRegistration(n,t);return this.executePostResolutionInterceptor(e,s,"Single"),s}if(function(e){return"function"==typeof e||e instanceof l}(e))return s=this.construct(e,t),this.executePostResolutionInterceptor(e,s,"Single"),s;throw new Error("Attempted to construct an undefined constructor. Could mean a circular dependency problem. Try using `delay` function.")},e.prototype.executePreResolutionInterceptor=function(e,t){var n,s;if(this.interceptors.preResolution.has(e)){var r=[];try{for(var o=i(this.interceptors.preResolution.getAll(e)),a=o.next();!a.done;a=o.next()){var p=a.value;"Once"!=p.options.frequency&&r.push(p),p.callback(e,t)}}catch(e){n={error:e}}finally{try{a&&!a.done&&(s=o.return)&&s.call(o)}finally{if(n)throw n.error}}this.interceptors.preResolution.setAll(e,r)}},e.prototype.executePostResolutionInterceptor=function(e,t,n){var s,r;if(this.interceptors.postResolution.has(e)){var o=[];try{for(var a=i(this.interceptors.postResolution.getAll(e)),p=a.next();!p.done;p=a.next()){var w=p.value;"Once"!=w.options.frequency&&o.push(w),w.callback(e,t,n)}}catch(e){s={error:e}}finally{try{p&&!p.done&&(r=a.return)&&r.call(a)}finally{if(s)throw s.error}}this.interceptors.postResolution.setAll(e,o)}},e.prototype.resolveRegistration=function(e,n){if(e.options.lifecycle===t.ResolutionScoped&&n.scopedResolutions.has(e))return n.scopedResolutions.get(e);var s,r=e.options.lifecycle===t.Singleton,o=e.options.lifecycle===t.ContainerScoped,i=r||o;return s=g(e.provider)?e.provider.useValue:h(e.provider)?i?e.instance||(e.instance=this.resolve(e.provider.useToken,n)):this.resolve(e.provider.useToken,n):w(e.provider)?i?e.instance||(e.instance=this.construct(e.provider.useClass,n)):this.construct(e.provider.useClass,n):u(e.provider)?e.provider.useFactory(this):this.construct(e.provider,n),e.options.lifecycle===t.ResolutionScoped&&n.scopedResolutions.set(e,s),s},e.prototype.resolveAll=function(e,t){var n=this;void 0===t&&(t=new y);var s=this.getAllRegistrations(e);if(!s&&c(e))throw new Error('Attempted to resolve unregistered dependency token: "'+e.toString()+'"');if(this.executePreResolutionInterceptor(e,"All"),s){var r=s.map((function(e){return n.resolveRegistration(e,t)}));return this.executePostResolutionInterceptor(e,r,"All"),r}var o=[this.construct(e,t)];return this.executePostResolutionInterceptor(e,o,"All"),o},e.prototype.isRegistered=function(e,t){return void 0===t&&(t=!1),this._registry.has(e)||t&&(this.parent||!1)&&this.parent.isRegistered(e,!0)},e.prototype.reset=function(){this._registry.clear(),this.interceptors.preResolution.clear(),this.interceptors.postResolution.clear()},e.prototype.clearInstances=function(){var e,t;try{for(var n=i(this._registry.entries()),s=n.next();!s.done;s=n.next()){var r=a(s.value,2),o=r[0],p=r[1];this._registry.setAll(o,p.filter((function(e){return!g(e.provider)})).map((function(e){return e.instance=void 0,e})))}}catch(t){e={error:t}}finally{try{s&&!s.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}},e.prototype.createChildContainer=function(){var n,s,r=new e(this);try{for(var o=i(this._registry.entries()),p=o.next();!p.done;p=o.next()){var w=a(p.value,2),u=w[0],l=w[1];l.some((function(e){return e.options.lifecycle===t.ContainerScoped}))&&r._registry.setAll(u,l.map((function(e){return e.options.lifecycle===t.ContainerScoped?{provider:e.provider,options:e.options}:e})))}}catch(e){n={error:e}}finally{try{p&&!p.done&&(s=o.return)&&s.call(o)}finally{if(n)throw n.error}}return r},e.prototype.beforeResolution=function(e,t,n){void 0===n&&(n={frequency:"Always"}),this.interceptors.preResolution.set(e,{callback:t,options:n})},e.prototype.afterResolution=function(e,t,n){void 0===n&&(n={frequency:"Always"}),this.interceptors.postResolution.set(e,{callback:t,options:n})},e.prototype.getRegistration=function(e){return this.isRegistered(e)?this._registry.get(e):this.parent?this.parent.getRegistration(e):null},e.prototype.getAllRegistrations=function(e){return this.isRegistered(e)?this._registry.getAll(e):this.parent?this.parent.getAllRegistrations(e):null},e.prototype.construct=function(e,t){var n=this;if(e instanceof l)return e.createProxy((function(e){return n.resolve(e,t)}));var s=D.get(e);if(!s||0===s.length){if(0===e.length)return new e;throw new Error('TypeInfo not known for "'+e.name+'"')}var r=s.map(this.resolveParams(t,e));return new(e.bind.apply(e,p([void 0],r)))},e.prototype.resolveParams=function(e,t){var n=this;return function(s,r){var o,i,w,u;try{return"object"==typeof(u=s)&&"token"in u&&"multiple"in u?f(s)?s.multiple?(o=n.resolve(s.transform)).transform.apply(o,p([n.resolveAll(s.token)],s.transformArgs)):(i=n.resolve(s.transform)).transform.apply(i,p([n.resolve(s.token,e)],s.transformArgs)):s.multiple?n.resolveAll(s.token):n.resolve(s.token,e):f(s)?(w=n.resolve(s.transform,e)).transform.apply(w,p([n.resolve(s.token,e)],s.transformArgs)):n.resolve(s,e)}catch(e){throw new Error(function(e,t,n){var s,r,o,i,w=a(e.toString().match(/constructor\(([\w, ]+)\)/)||[],2)[1];return s="Cannot inject the dependency "+(i=t,(null===(o=void 0===w?null:w)?"at position #"+i:'"'+o.split(",")[i].trim()+'" at position #'+i)+' of "')+e.name+'" constructor. Reason:',void 0===r&&(r="    "),p([s],n.message.split("\n").map((function(e){return r+e}))).join("\n")}(t,r,e))}}},e}()),L="injectionTokens",S=function(e){return t=e,function(e,n,s){var r=Reflect.getOwnMetadata(L,e)||{};r[s]=t,Reflect.defineMetadata(L,r,e)};var t},R=function(){return function(e){D.set(e,function(e){var t=Reflect.getMetadata("design:paramtypes",e)||[],n=Reflect.getOwnMetadata(L,e)||{};return Object.keys(n).forEach((function(e){t[+e]=n[e]})),t}(e))}};if("undefined"==typeof Reflect||!Reflect.getMetadata)throw new Error("tsyringe requires a reflect polyfill. Please add 'import \"reflect-metadata\"' to the top of your entry point.");class E{constructor(e){this._value=e,this.ensureIsValidValue()}get value(){return this._value}ensureIsValidValue(){if(isNaN(this._value))throw RangeError("The value must be a number")}}class P extends E{constructor(e){super(e),this.ensureIsValidEquidistance()}ensureIsValidEquidistance(){if(this.value<10||this.value>1e4)throw RangeError("The equidistance must be between 10 and 10000")}}class T extends E{constructor(e){super(e),this.ensureIsValidLatitude()}ensureIsValidLatitude(){if(this.value<-84||this.value>-20)throw RangeError("The latitud must be between -84 and -20")}}class C{constructor(e){this._value=e,this.ensureIsValidValue()}get value(){return this._value}ensureIsValidValue(){if(""===this._value)throw RangeError("The value cannot be empty")}}class O extends C{constructor(e){super(e)}}class F extends E{constructor(e){super(e),this.ensureIsValidLongitude()}ensureIsValidLongitude(){if(this.value<-74||this.value>-52)throw RangeError("The longitude must be between -74 and -52")}}class b{constructor(e,t){this._longitude=e,this._latitude=t}get value(){return[this._longitude,this._latitude]}get longitude(){return this._longitude}get latitude(){return this._latitude}get toString(){return`${this._longitude.value},${this._latitude.value}`}toProcessString(){return`${this._longitude.value} ${this._latitude.value}`}static createFromString(e){const t=e.split(" ");return new b(new F(parseFloat(t[0])),new T(parseFloat(t[1])))}get moveLongitude(){return new F(this._longitude.value+1e-7)}get moveLatitude(){return new T(this._latitude.value+1e-7)}}class k{constructor(e){this._value=e}static createFromString(e){const t=[];return e.trim().replace("\n","").replace("  "," ").replace("  "," ").split(",").forEach((e=>{const n=e.trim().split(" ");t.push(new b(new F(parseFloat(n[0])),new T(parseFloat(n[1]))))})),new k(t)}get value(){return this._value}toString(){const e=[];return this.value.forEach((t=>{e.push(t.toString)})),`[[${e.join("],[")}]]`}coordinates(){const e=`{\n      "type": "FeatureCollection",\n      "name": "test",\n      "crs": { "type": "name", "properties": { "name": "urn:ogc:def:crs:OGC:1.3:CRS84" } },\n      "features": [\n        { "type": "Feature", "properties": { }, "geometry": { "type": "Polygon", "coordinates": [ ${this.toString()} ] } }\n      ]\n    }`;return JSON.parse(e).features[0].geometry.coordinates}}class A extends C{constructor(e){super(e)}}var M=function(e,t,n,s){return new(n||(n=Promise))((function(r,o){function i(e){try{p(s.next(e))}catch(e){o(e)}}function a(e){try{p(s.throw(e))}catch(e){o(e)}}function p(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}p((s=s.apply(e,t||[])).next())}))};class j{post(e,t){return M(this,void 0,void 0,(function*(){return(yield fetch(e,{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"text/plain"},redirect:"follow",referrerPolicy:"no-referrer",body:t})).json()}))}postReturningBlob(e,t){return M(this,void 0,void 0,(function*(){return(yield fetch(e,{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"text/plain"},redirect:"follow",referrerPolicy:"no-referrer",body:t})).blob()}))}get(e){return M(this,void 0,void 0,(function*(){return(yield fetch(e,{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"text/plain"},redirect:"follow",referrerPolicy:"no-referrer"})).json()}))}}class B{constructor(e,t,n,s,r,o,i){this._longitudeLower=e,this._latitudeLower=t,this._longitudeUpper=n,this._latitudeUpper=s,this._equidistance=r,this._wpsEndpoint=o,this._mdeLayerFullname=i}get longitudeLower(){return this._longitudeLower}get latitudeLower(){return this._latitudeLower}get longitudeUpper(){return this._longitudeUpper}get latitudeUpper(){return this._latitudeUpper}get equidistance(){return this._equidistance}get wpsEndpoint(){return this._wpsEndpoint}get fullWpsEndpoint(){return`${this.wpsEndpoint.value}&request=Execute&identifier=gs:Contour`}get xmlInput(){return`<?xml version="1.0" encoding="UTF-8"?><wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n    <ows:Identifier>gs:Contour</ows:Identifier>\n    <wps:DataInputs>\n      <wps:Input>\n        <ows:Identifier>data</ows:Identifier>\n        <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wcs" method="POST">\n          <wps:Body>\n            <wcs:GetCoverage service="WCS" version="1.1.1">\n              <ows:Identifier>${this._mdeLayerFullname.value}</ows:Identifier>\n              <wcs:DomainSubset>\n                <ows:BoundingBox crs="http://www.opengis.net/gml/srs/epsg.xml#4326">\n                  <ows:LowerCorner>${this._longitudeLower.value} ${this._latitudeLower.value}</ows:LowerCorner>\n                  <ows:UpperCorner>${this._longitudeUpper.value} ${this._latitudeUpper.value}</ows:UpperCorner>\n                </ows:BoundingBox>\n              </wcs:DomainSubset>\n              <wcs:Output format="image/tiff"/>\n            </wcs:GetCoverage>\n          </wps:Body>\n        </wps:Reference>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>band</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>0</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>simplify</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>true</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>smooth</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>false</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>interval</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>${this._equidistance.value}</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n    </wps:DataInputs>\n    <wps:ResponseForm>\n      <wps:RawDataOutput mimeType="application/json">\n        <ows:Identifier>result</ows:Identifier>\n      </wps:RawDataOutput>\n    </wps:ResponseForm>\n  </wps:Execute>`}}B.MAX_AREA_ALLOWED=1e8,B.MIN_VALLEY_EQUIDISTANCE_ALLOWED=10,B.MIN_MOUNTAIN_EQUIDISTANCE_ALLOWED=10,B.FIELDS=JSON.parse('[\n      {\n        "name": "Capa",\n        "element": "select",\n        "references": "drawedLayers",\n        "allowedTypes": ["rectangle"],\n        "points": ["ne", "sw"]\n      },\n      {\n        "name": "Equidistancia",\n        "element": "input",\n        "type": "number",\n        "min": 10,\n        "max": 10000\n      }\n    ]');class ${constructor(e,t,n){this._polygon=e,this._equidistance=t,this._wpsEndpoint=n,this._baseRasterLayer=new C("geoprocess:alos_unificado")}get polygon(){return this._polygon}get equidistance(){return this._equidistance}rectangle(){return this._polygon.toString()}get wpsEndpoint(){return this._wpsEndpoint}get fullWpsEndpoint(){return`${this.wpsEndpoint.value}&request=Execute&identifier=gs:Contour`}get xmlInput(){return`<?xml version="1.0" encoding="UTF-8"?><wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n    <ows:Identifier>gs:Contour</ows:Identifier>\n    <wps:DataInputs>\n      <wps:Input>\n        <ows:Identifier>data</ows:Identifier>\n        <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wps" method="POST">\n            <wps:Body>\n              \n              \x3c!-- ras:CropCoverage --\x3e\n              <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                <ows:Identifier>ras:CropCoverage</ows:Identifier>\n                <wps:DataInputs>\n                  <wps:Input>\n                    <ows:Identifier>coverage</ows:Identifier>\n                    <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wcs" method="POST">\n                      <wps:Body>\n                        <wcs:GetCoverage service="WCS" version="1.1.1">\n                          <ows:Identifier>${this._baseRasterLayer.value}</ows:Identifier>\n                          <wcs:DomainSubset>\n                            <ows:BoundingBox crs="http://www.opengis.net/gml/srs/epsg.xml#4326">\n                              <ows:LowerCorner>-74.000000946 -55.666705466</ows:LowerCorner>\n                              <ows:UpperCorner>-53.499547847 -21.666460109</ows:UpperCorner>\n                            </ows:BoundingBox>\n                          </wcs:DomainSubset>\n                          <wcs:Output format="image/tiff"/>\n                        </wcs:GetCoverage>\n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>cropShape</ows:Identifier>\n                    <wps:Data>\n                      <wps:ComplexData mimeType="application/json"><![CDATA[{\n                        "geometry": {\n                        "type": "Polygon",\n                        "coordinates": [ ${this.rectangle()} ] } }]]>\n                      </wps:ComplexData>\n                    </wps:Data>\n                  </wps:Input>\n                </wps:DataInputs>\n                <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType="image/tiff">\n                    <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                </wps:ResponseForm>\n              </wps:Execute>\n              \x3c!-- /ras:CropCoverage --\x3e\n  \n            </wps:Body>\n          </wps:Reference>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>interval</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>${this._equidistance.value}</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n    </wps:DataInputs>\n    <wps:ResponseForm>\n      <wps:RawDataOutput mimeType="application/json">\n        <ows:Identifier>result</ows:Identifier>\n      </wps:RawDataOutput>\n    </wps:ResponseForm>\n  </wps:Execute>`}}$.MAX_AREA_ALLOWED=1e8,$.MIN_VALLEY_EQUIDISTANCE_ALLOWED=10,$.MIN_MOUNTAIN_EQUIDISTANCE_ALLOWED=100,$.FIELDS=JSON.parse('[\n      {\n        "name": "Capa",\n        "element": "select",\n        "references": "drawedLayers",\n        "allowedTypes": ["rectangle"],\n        "points": ["ne", "sw"]\n      },\n      {\n        "name": "Equidistancia",\n        "element": "input",\n        "type": "number",\n        "min": 10,\n        "max": 10000\n      }\n    ]');var N=6371008.8,W={centimeters:637100880,centimetres:637100880,degrees:57.22891354143274,feet:20902260.511392,inches:39.37*N,kilometers:6371.0088,kilometres:6371.0088,meters:N,metres:N,miles:3958.761333810546,millimeters:6371008800,millimetres:6371008800,nauticalmiles:N/1852,radians:1,yards:6967335.223679999};function U(e,t,n){void 0===n&&(n={});var s={type:"Feature"};return(0===n.id||n.id)&&(s.id=n.id),n.bbox&&(s.bbox=n.bbox),s.properties=t||{},s.geometry=e,s}function q(e,t,n){if(void 0===n&&(n={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!J(e[0])||!J(e[1]))throw new Error("coordinates must contain numbers");return U({type:"Point",coordinates:e},t,n)}function V(e,t,n){void 0===n&&(n={});for(var s=0,r=e;s<r.length;s++){var o=r[s];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var i=0;i<o[o.length-1].length;i++)if(o[o.length-1][i]!==o[0][i])throw new Error("First and last Position are not equivalent.")}return U({type:"Polygon",coordinates:e},t,n)}function X(e){return e%(2*Math.PI)*180/Math.PI}function G(e){return e%360*Math.PI/180}function J(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}function Q(e,t,n){if(null!==e)for(var s,r,o,i,a,p,w,u,l=0,c=0,f=e.type,h="FeatureCollection"===f,g="Feature"===f,d=h?e.features.length:1,m=0;m<d;m++){a=(u=!!(w=h?e.features[m].geometry:g?e.geometry:e)&&"GeometryCollection"===w.type)?w.geometries.length:1;for(var y=0;y<a;y++){var v=0,x=0;if(null!==(i=u?w.geometries[y]:w)){p=i.coordinates;var I=i.type;switch(l=!n||"Polygon"!==I&&"MultiPolygon"!==I?0:1,I){case null:break;case"Point":if(!1===t(p,c,m,v,x))return!1;c++,v++;break;case"LineString":case"MultiPoint":for(s=0;s<p.length;s++){if(!1===t(p[s],c,m,v,x))return!1;c++,"MultiPoint"===I&&v++}"LineString"===I&&v++;break;case"Polygon":case"MultiLineString":for(s=0;s<p.length;s++){for(r=0;r<p[s].length-l;r++){if(!1===t(p[s][r],c,m,v,x))return!1;c++}"MultiLineString"===I&&v++,"Polygon"===I&&x++}"Polygon"===I&&v++;break;case"MultiPolygon":for(s=0;s<p.length;s++){for(x=0,r=0;r<p[s].length;r++){for(o=0;o<p[s][r].length-l;o++){if(!1===t(p[s][r][o],c,m,v,x))return!1;c++}x++}v++}break;case"GeometryCollection":for(s=0;s<i.geometries.length;s++)if(!1===Q(i.geometries[s],t,n))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function H(e,t){var n,s,r,o,i,a,p,w,u,l,c=0,f="FeatureCollection"===e.type,h="Feature"===e.type,g=f?e.features.length:1;for(n=0;n<g;n++){for(a=f?e.features[n].geometry:h?e.geometry:e,w=f?e.features[n].properties:h?e.properties:{},u=f?e.features[n].bbox:h?e.bbox:void 0,l=f?e.features[n].id:h?e.id:void 0,i=(p=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,r=0;r<i;r++)if(null!==(o=p?a.geometries[r]:a))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(o,c,w,u,l))return!1;break;case"GeometryCollection":for(s=0;s<o.geometries.length;s++)if(!1===t(o.geometries[s],c,w,u,l))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,c,w,u,l))return!1;c++}}function K(e,t,n){var s=n,r=!1;return function(e,t){!function(e,t){H(e,(function(e,n,s,r,o){var i,a=null===e?null:e.type;switch(a){case null:case"Point":case"LineString":case"Polygon":return!1!==t(U(e,s,{bbox:r,id:o}),n,0)&&void 0}switch(a){case"MultiPoint":i="Point";break;case"MultiLineString":i="LineString";break;case"MultiPolygon":i="Polygon"}for(var p=0;p<e.coordinates.length;p++){var w=e.coordinates[p];if(!1===t(U({type:i,coordinates:w},s),n,p))return!1}}))}(e,(function(e,n,s){var r=0;if(e.geometry){var o=e.geometry.type;if("Point"!==o&&"MultiPoint"!==o){var i,a=0,p=0,w=0;return!1!==Q(e,(function(o,u,l,c,f){if(void 0===i||n>a||c>p||f>w)return i=o,a=n,p=c,w=f,void(r=0);var h=function(e,t,n){if(void 0===n&&(n={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return U({type:"LineString",coordinates:e},t,n)}([i,o],e.properties);if(!1===t(h,n,s,f,r))return!1;r++,i=o}))&&void 0}}}))}(e,(function(e,o,i,a,p){s=!1===r&&void 0===n?e:t(s,e,o,i,a,p),r=!0})),s}var Y=6378137;function z(e){return function(e,t,n){var s=0;return H(e,(function(e,t,n,r,o){s=s+function(e){var t,n=0;switch(e.type){case"Polygon":return Z(e.coordinates);case"MultiPolygon":for(t=0;t<e.coordinates.length;t++)n+=Z(e.coordinates[t]);return n;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}(e)})),s}(e)}function Z(e){var t=0;if(e&&e.length>0){t+=Math.abs(ee(e[0]));for(var n=1;n<e.length;n++)t-=Math.abs(ee(e[n]))}return t}function ee(e){var t,n,s,r,o,i,a=0,p=e.length;if(p>2){for(i=0;i<p;i++)i===p-2?(s=p-2,r=p-1,o=0):i===p-1?(s=p-1,r=0,o=1):(s=i,r=i+1,o=i+2),t=e[s],n=e[r],a+=(te(e[o][0])-te(t[0]))*Math.sin(te(n[1]));a=a*Y*Y/2}return a}function te(e){return e*Math.PI/180}function ne(e){var t=[1/0,1/0,-1/0,-1/0];return Q(e,(function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])})),t}ne.default=ne;var se=ne;function re(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function oe(e){return"Feature"===e.type?e.geometry:e}function ie(e,t,n){if(void 0===n&&(n={}),!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");var s=re(e),r=oe(t),o=r.type,i=t.bbox,a=r.coordinates;if(i&&!1===function(e,t){return t[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]}(s,i))return!1;"Polygon"===o&&(a=[a]);for(var p=!1,w=0;w<a.length&&!p;w++)if(ae(s,a[w][0],n.ignoreBoundary)){for(var u=!1,l=1;l<a[w].length&&!u;)ae(s,a[w][l],!n.ignoreBoundary)&&(u=!0),l++;u||(p=!0)}return p}function ae(e,t,n){var s=!1;t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]&&(t=t.slice(0,t.length-1));for(var r=0,o=t.length-1;r<t.length;o=r++){var i=t[r][0],a=t[r][1],p=t[o][0],w=t[o][1];if(e[1]*(i-p)+a*(p-e[0])+w*(e[0]-i)==0&&(i-e[0])*(p-e[0])<=0&&(a-e[1])*(w-e[1])<=0)return!n;a>e[1]!=w>e[1]&&e[0]<(p-i)*(e[1]-a)/(w-a)+i&&(s=!s)}return s}function pe(e,t,n,s,r){var o=n[0],i=n[1],a=e[0],p=e[1],w=t[0],u=t[1],l=w-a,c=u-p,f=(n[0]-a)*c-(n[1]-p)*l;if(null!==r){if(Math.abs(f)>r)return!1}else if(0!==f)return!1;return s?"start"===s?Math.abs(l)>=Math.abs(c)?l>0?a<o&&o<=w:w<=o&&o<a:c>0?p<i&&i<=u:u<=i&&i<p:"end"===s?Math.abs(l)>=Math.abs(c)?l>0?a<=o&&o<w:w<o&&o<=a:c>0?p<=i&&i<u:u<i&&i<=p:"both"===s&&(Math.abs(l)>=Math.abs(c)?l>0?a<o&&o<w:w<o&&o<a:c>0?p<i&&i<u:u<i&&i<p):Math.abs(l)>=Math.abs(c)?l>0?a<=o&&o<=w:w<=o&&o<=a:c>0?p<=i&&i<=u:u<=i&&i<=p}var we=function(e,t,n){void 0===n&&(n={});for(var s=re(e),r=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}(t),o=0;o<r.length-1;o++){var i=!1;if(n.ignoreEndVertices&&(0===o&&(i="start"),o===r.length-2&&(i="end"),0===o&&o+1===r.length-1&&(i="both")),pe(r[o],r[o+1],s,i,void 0===n.epsilon?null:n.epsilon))return!0}return!1};function ue(e,t){var n=oe(e),s=oe(t),r=n.type,o=s.type,i=n.coordinates,a=s.coordinates;switch(r){case"Point":switch(o){case"Point":return ce(i,a);default:throw new Error("feature2 "+o+" geometry not supported")}case"MultiPoint":switch(o){case"Point":return function(e,t){var n,s=!1;for(n=0;n<e.coordinates.length;n++)if(ce(e.coordinates[n],t.coordinates)){s=!0;break}return s}(n,s);case"MultiPoint":return function(e,t){for(var n=0,s=t.coordinates;n<s.length;n++){for(var r=s[n],o=!1,i=0,a=e.coordinates;i<a.length;i++)if(ce(r,a[i])){o=!0;break}if(!o)return!1}return!0}(n,s);default:throw new Error("feature2 "+o+" geometry not supported")}case"LineString":switch(o){case"Point":return we(s,n,{ignoreEndVertices:!0});case"LineString":return function(e,t){for(var n=!1,s=0,r=t.coordinates;s<r.length;s++){var o=r[s];if(we({type:"Point",coordinates:o},e,{ignoreEndVertices:!0})&&(n=!0),!we({type:"Point",coordinates:o},e,{ignoreEndVertices:!1}))return!1}return n}(n,s);case"MultiPoint":return function(e,t){for(var n=!1,s=0,r=t.coordinates;s<r.length;s++){var o=r[s];if(we(o,e,{ignoreEndVertices:!0})&&(n=!0),!we(o,e))return!1}return!!n}(n,s);default:throw new Error("feature2 "+o+" geometry not supported")}case"Polygon":switch(o){case"Point":return ie(s,n,{ignoreBoundary:!0});case"LineString":return function(e,t){var n,s,r=!1,o=0;if(!le(se(e),se(t)))return!1;for(;o<t.coordinates.length-1;o++)if(ie({type:"Point",coordinates:(n=t.coordinates[o],s=t.coordinates[o+1],[(n[0]+s[0])/2,(n[1]+s[1])/2])},e,{ignoreBoundary:!0})){r=!0;break}return r}(n,s);case"Polygon":return function(e,t){if("Feature"===e.type&&null===e.geometry)return!1;if("Feature"===t.type&&null===t.geometry)return!1;if(!le(se(e),se(t)))return!1;for(var n=0,s=oe(t).coordinates;n<s.length;n++)for(var r=0,o=s[n];r<o.length;r++)if(!ie(o[r],e))return!1;return!0}(n,s);case"MultiPoint":return function(e,t){for(var n=0,s=t.coordinates;n<s.length;n++)if(!ie(s[n],e,{ignoreBoundary:!0}))return!1;return!0}(n,s);default:throw new Error("feature2 "+o+" geometry not supported")}default:throw new Error("feature1 "+r+" geometry not supported")}}function le(e,t){return!(e[0]>t[0]||e[2]<t[2]||e[1]>t[1]||e[3]<t[3])}function ce(e,t){return e[0]===t[0]&&e[1]===t[1]}let fe=class{ensureInputDataIsInTolerance(e){const t=this.pointsToPolygon(e.longitudeLower,e.latitudeLower,e.longitudeUpper,e.latitudeUpper);if(z(t)>B.MAX_AREA_ALLOWED)throw RangeError("The area requested must be less than 100km2");if(1==ue(V([[[-73.90444332754741,-51.88846973694263],[-70.88203831519283,-20.86255705909867],[-62.863412772211284,-21.417692673612777],[-64.34377441091557,-28.69613739724218],[-62.67836756737324,-28.881182602080212],[-66.50263513402598,-52.690332291240786],[-73.90444332754741,-51.88846973694263]]]),t)&&e.equidistance.value<B.MIN_MOUNTAIN_EQUIDISTANCE_ALLOWED)throw RangeError("Equidistance must be grather than 100");if(e.equidistance.value<B.MIN_VALLEY_EQUIDISTANCE_ALLOWED)throw RangeError("Equidistance must be grather than 10")}pointsToPolygon(e,t,n,s){return V([[[n.value,s.value],[n.value,t.value],[e.value,t.value],[e.value,s.value],[n.value,s.value]]])}ensureInputDataIsInToleranceV2(e){const t=this.pointsToPolygonV2(e.polygon);if(z(t)>$.MAX_AREA_ALLOWED)throw RangeError("The area requested must be less than 100km2");if(1==ue(V([[[-73.90444332754741,-51.88846973694263],[-70.88203831519283,-20.86255705909867],[-62.863412772211284,-21.417692673612777],[-64.34377441091557,-28.69613739724218],[-62.67836756737324,-28.881182602080212],[-66.50263513402598,-52.690332291240786],[-73.90444332754741,-51.88846973694263]]]),t)&&e.equidistance.value<B.MIN_MOUNTAIN_EQUIDISTANCE_ALLOWED)throw RangeError("Equidistance must be grather than 100");if(e.equidistance.value<B.MIN_VALLEY_EQUIDISTANCE_ALLOWED)throw RangeError("Equidistance must be grather than 10")}pointsToPolygonV2(e){return V(e.coordinates())}};fe=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R()],fe);var he=fe,ge=function(e,t){return function(n,s){t(n,s,e)}},de=function(e,t,n,s){return new(n||(n=Promise))((function(r,o){function i(e){try{p(s.next(e))}catch(e){o(e)}}function a(e){try{p(s.throw(e))}catch(e){o(e)}}function p(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}p((s=s.apply(e,t||[])).next())}))};let me=class{constructor(e,t){this.postman=e,this.tolaranceChecker=t}getFields(){return B.FIELDS}execute(e){return de(this,void 0,void 0,(function*(){return this.ensureInputDataIsInTolerance(e),yield this.postman.post(e.fullWpsEndpoint,e.xmlInput)}))}executeV2(e){return de(this,void 0,void 0,(function*(){return this.ensureInputDataIsInToleranceV2(e),yield this.postman.post(e.fullWpsEndpoint,e.xmlInput)}))}ensureInputDataIsInTolerance(e){this.tolaranceChecker.ensureInputDataIsInTolerance(e)}ensureInputDataIsInToleranceV2(e){this.tolaranceChecker.ensureInputDataIsInToleranceV2(e)}};me=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R(),ge(0,S("Postman")),ge(1,S("ContourToleranceChecker"))],me);var ye=me,ve=function(e,t,n,s){return new(n||(n=Promise))((function(r,o){function i(e){try{p(s.next(e))}catch(e){o(e)}}function a(e){try{p(s.throw(e))}catch(e){o(e)}}function p(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}p((s=s.apply(e,t||[])).next())}))};_.register("Postman",{useClass:j}),_.register("ContourToleranceChecker",{useClass:he});class xe{constructor(e,t,n){this.host=e,this.mdeLayerFullname=t,this.service=n||_.resolve(ye)}getFields(){return this.service.getFields()}execute(e,t,n,s,r){return ve(this,void 0,void 0,(function*(){const o=new B(new F(e),new T(t),new F(n),new T(s),new P(r),new A(this.host),new O(this.mdeLayerFullname));return this.service.execute(o)}))}executeV2(e,t){return ve(this,void 0,void 0,(function*(){const n=new $(k.createFromString(e),new P(t),new A(this.host));return this.service.executeV2(n)}))}}class Ie{constructor(e,t,n){this._point=e,this._wpsEndpoint=t,this._mdeLayerFullname=n}get point(){return this._point}get wpsEndpoint(){return this._wpsEndpoint}get mdeLayerShortname(){return this._mdeLayerFullname.value.indexOf(":")<0?this._mdeLayerFullname.value:this._mdeLayerFullname.value.split(":")[1]}get toString(){return this._point.toString}get xmlInput(){return`<?xml version="1.0" encoding="UTF-8"?>\n\n\n    \x3c!-- IntersectionFeatureCollection --\x3e\n    <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n      <ows:Identifier>gs:IntersectionFeatureCollection</ows:Identifier>\n      <wps:DataInputs>\n        <wps:Input>\n          <ows:Identifier>first feature collection</ows:Identifier>\n          <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n            <wps:Body>\n          \n          \n              \x3c!-- BufferFeatureCollection --\x3e\n              <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                <ows:Identifier>vec:BufferFeatureCollection</ows:Identifier>\n                <wps:DataInputs>\n                  <wps:Input>\n                    <ows:Identifier>features</ows:Identifier>\n                    <wps:Data>\n                      <wps:ComplexData mimeType="application/json"><![CDATA[{\n              "features": [\n              { "type": "Feature", "properties": { }, "geometry": { "type": "Point", "coordinates": [ ${this.toString} ] } }\n              ]\n              }]]></wps:ComplexData>\n                    </wps:Data>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>distance</ows:Identifier>\n                    <wps:Data>\n                      <wps:LiteralData>0.0000001</wps:LiteralData>\n                    </wps:Data>\n                  </wps:Input>\n                </wps:DataInputs>\n                <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType="application/json">\n                    <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                </wps:ResponseForm>\n              </wps:Execute>\n              \x3c!-- /BufferFeatureCollection --\x3e\n    \n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n        <wps:Input>\n          <ows:Identifier>second feature collection</ows:Identifier>\n          <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n            <wps:Body>\n    \n    \n              \x3c!-- PolygonExtraction --\x3e\n              <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                <ows:Identifier>ras:PolygonExtraction</ows:Identifier>\n                <wps:DataInputs>\n                  <wps:Input>\n                    <ows:Identifier>data</ows:Identifier>\n                    <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wps" method="POST">\n                      <wps:Body>\n                          \n    \n    \n                        \x3c!-- CropCoverage --\x3e\n                        <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                          <ows:Identifier>ras:CropCoverage</ows:Identifier>\n                          <wps:DataInputs>\n                            <wps:Input>\n                              <ows:Identifier>coverage</ows:Identifier>\n                              <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wcs" method="POST">\n                                <wps:Body>\n                                  <wcs:GetCoverage service="WCS" version="1.1.1">\n                                    <ows:Identifier>${this._mdeLayerFullname.value}</ows:Identifier>\n                                    <wcs:DomainSubset>\n                                      <ows:BoundingBox crs="http://www.opengis.net/gml/srs/epsg.xml#4326">\n                                        <ows:LowerCorner>-74.000000946 -55.666705466</ows:LowerCorner>\n                                        <ows:UpperCorner>-53.499547847 -21.666460109</ows:UpperCorner>\n                                      </ows:BoundingBox>\n                                    </wcs:DomainSubset>\n                                    <wcs:Output format="image/tiff"/>\n                                  </wcs:GetCoverage>\n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                            <wps:Input>\n                              <ows:Identifier>cropShape</ows:Identifier>\n                              <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n                                <wps:Body>\n    \n    \n                                    \x3c!-- Buffer --\x3e\n                                    <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                                            <ows:Identifier>geo:buffer</ows:Identifier>\n                                            <wps:DataInputs>\n                                                <wps:Input>\n                                                <ows:Identifier>geom</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:ComplexData mimeType="application/json"><![CDATA[{\n                                                    "geometry": { "type": "Point", "coordinates": [ ${this.toString} ]\n                                                    } }]]></wps:ComplexData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>distance</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>0.003</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>capStyle</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>Square</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                            </wps:DataInputs>\n                                            <wps:ResponseForm>\n                                                <wps:RawDataOutput mimeType="application/json">\n                                                <ows:Identifier>result</ows:Identifier>\n                                                </wps:RawDataOutput>\n                                            </wps:ResponseForm>\n                                    </wps:Execute>\n                                    \x3c!-- Buffer --\x3e\n    \n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                          </wps:DataInputs>\n                          <wps:ResponseForm>\n                            <wps:RawDataOutput mimeType="image/tiff">\n                              <ows:Identifier>result</ows:Identifier>\n                            </wps:RawDataOutput>\n                          </wps:ResponseForm>\n                        </wps:Execute>\n                        \x3c!-- /CropCoverage --\x3e\n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>roi</ows:Identifier>\n                    <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n                      <wps:Body>\n    \n    \n                          \x3c!-- Buffer --\x3e\n                          <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                                <ows:Identifier>geo:buffer</ows:Identifier>\n                                <wps:DataInputs>\n                                    <wps:Input>\n                                    <ows:Identifier>geom</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:ComplexData mimeType="application/json"><![CDATA[{\n                                        "geometry": { "type": "Point", "coordinates": [ ${this.toString} ]\n                                        } }]]></wps:ComplexData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>distance</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>0.001</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>capStyle</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>Square</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                </wps:DataInputs>\n                                <wps:ResponseForm>\n                                    <wps:RawDataOutput mimeType="application/json">\n                                    <ows:Identifier>result</ows:Identifier>\n                                    </wps:RawDataOutput>\n                                </wps:ResponseForm>\n                          </wps:Execute>\n                          \x3c!-- Buffer --\x3e\n    \n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>band</ows:Identifier>\n                    <wps:Data>\n                      <wps:LiteralData>0</wps:LiteralData>\n                    </wps:Data>\n                  </wps:Input>\n                </wps:DataInputs>\n                <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType="application/json">\n                    <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                </wps:ResponseForm>\n              </wps:Execute>\n              \x3c!-- /PolygonExtraction --\x3e\n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n      </wps:DataInputs>\n      <wps:ResponseForm>\n        <wps:RawDataOutput mimeType="application/json">\n          <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n      </wps:ResponseForm>\n    </wps:Execute>\n    \x3c!-- /IntersectionFeatureCollection --\x3e\n    `}}Ie.MAX_LENGHT_ALLOWED=100,Ie.FIELDS=JSON.parse('[\n      {\n        "name": "Capa",\n        "element": "select",\n        "references": "drawedLayers",\n        "allowedTypes": ["point"]\n      }\n    ]');var De=function(e,t,n){void 0===n&&(n={});var s=re(e),r=re(t),o=G(r[1]-s[1]),i=G(r[0]-s[0]),a=G(s[1]),p=G(r[1]),w=Math.pow(Math.sin(o/2),2)+Math.pow(Math.sin(i/2),2)*Math.cos(a)*Math.cos(p);return function(e,t){void 0===t&&(t="kilometers");var n=W[t];if(!n)throw new Error(t+" units is invalid");return e*n}(2*Math.atan2(Math.sqrt(w),Math.sqrt(1-w)),n.units)};function _e(e,t){return void 0===t&&(t={}),K(e,(function(e,n){var s=n.geometry.coordinates;return e+De(s[0],s[1],t)}),0)}let Le=class{ensureInputDataIsInTolerance(e){if(_e(U(JSON.parse(`\n      {\n        "type": "Point",\n        "coordinates": [${e.point.toString}]\n      }`)),{units:"kilometers"})>100)throw RangeError("The line length requested must be less than 100km")}};Le=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R()],Le);var Se,Re=Le;!function(e){e[e.Point3D=0]="Point3D",e[e.FeatureCollectionOfPoint=1]="FeatureCollectionOfPoint"}(Se||(Se={}));var Ee=function(e,t){return function(n,s){t(n,s,e)}};let Pe=class{constructor(e,t){this.postman=e,this.tolaranceChecker=t}getFields(){return Ie.FIELDS}execute(e,t){return n=this,s=void 0,o=function*(){this.ensureInputDataIsInTolerance(e);const n=yield this.postman.post(e.wpsEndpoint.value,e.xmlInput);return this.formatResponse(e,n,t)},new((r=void 0)||(r=Promise))((function(e,t){function i(e){try{p(o.next(e))}catch(e){t(e)}}function a(e){try{p(o.throw(e))}catch(e){t(e)}}function p(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,a)}p((o=o.apply(n,s||[])).next())}));var n,s,r,o}ensureInputDataIsInTolerance(e){this.tolaranceChecker.ensureInputDataIsInTolerance(e)}postmanResponseToPoint3D(e,t){const n=e.toString;return JSON.parse('{ "type": "Point", "coordinates": ['+n+","+t.features[0].properties[e.mdeLayerShortname+"_value"]+"] }")}postmanResponseToFeatureCollection(e,t){const n=e.toString;return JSON.parse(`{\n        "type": "FeatureCollection",\n        "features": [\n          {\n            "type": "Feature",\n            "geometry": {\n              "type": "Point",\n              "coordinates": [\n                ${n}\n              ]\n            },\n            "properties": {\n              "height": ${t.features[0].properties[`${e.mdeLayerShortname}_value`]}\n            },\n            "id": "0"\n          }\n        ]\n      }`)}formatResponse(e,t,n){return e.toString,n===Se.FeatureCollectionOfPoint?this.postmanResponseToFeatureCollection(e,t):this.postmanResponseToPoint3D(e,t)}};Pe=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R(),Ee(0,S("Postman")),Ee(1,S("ElevationOfPointToleranceChecker"))],Pe);var Te=Pe;_.register("Postman",{useClass:j}),_.register("ElevationOfPointToleranceChecker",{useClass:Re});class Ce{constructor(e,t,n){this.host=e,this.mdeLayerFullname=t,this.service=n||_.resolve(Te)}getFields(){return this.service.getFields()}execute(e,t=Se.Point3D){return n=this,s=void 0,o=function*(){const n=new Ie(b.createFromString(e),new A(this.host),new O(this.mdeLayerFullname));return this.service.execute(n,t)},new((r=void 0)||(r=Promise))((function(e,t){function i(e){try{p(o.next(e))}catch(e){t(e)}}function a(e){try{p(o.throw(e))}catch(e){t(e)}}function p(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,a)}p((o=o.apply(n,s||[])).next())}));var n,s,r,o}}class Oe{constructor(e){this._value=e}static createFromString(e){const t=[];return e.trim().replace("\n","").replace("  "," ").replace("  "," ").split(",").forEach((e=>{const n=e.trim().split(" ");t.push(new b(new F(parseFloat(n[0])),new T(parseFloat(n[1]))))})),new Oe(t)}get value(){return this._value}toString(){const e=[];return this.value.forEach((t=>{e.push(t.toString)})),`[${e.join("],[")}]`}toProcessString(){const e=[];return this.value.forEach((t=>{e.push(t.toProcessString())})),`${e.join(",")}`}subLine(e){const t=[];return this.value.forEach((function(n,s){s<=e&&t.push(n.toString)})),`[${t.join("],[")}]`}}function Fe(e,t,n){if(void 0===n&&(n={}),!0===n.final)return function(e,t){var n=Fe(t,e);return(n+180)%360}(e,t);var s=re(e),r=re(t),o=G(s[0]),i=G(r[0]),a=G(s[1]),p=G(r[1]),w=Math.sin(i-o)*Math.cos(p),u=Math.cos(a)*Math.sin(p)-Math.sin(a)*Math.cos(p)*Math.cos(i-o);return X(Math.atan2(w,u))}function be(e,t,n,s){void 0===s&&(s={});var r=re(e),o=G(r[0]),i=G(r[1]),a=G(n),p=function(e,t){void 0===t&&(t="kilometers");var n=W[t];if(!n)throw new Error(t+" units is invalid");return e/n}(t,s.units),w=Math.asin(Math.sin(i)*Math.cos(p)+Math.cos(i)*Math.sin(p)*Math.cos(a));return q([X(o+Math.atan2(Math.sin(a)*Math.sin(p)*Math.cos(i),Math.cos(p)-Math.sin(i)*Math.sin(w))),X(w)],s.properties)}function ke(e,t,n){void 0===n&&(n={});for(var s=oe(e).coordinates,r=0,o=0;o<s.length&&!(t>=r&&o===s.length-1);o++){if(r>=t){var i=t-r;if(i){var a=Fe(s[o],s[o-1])-180;return be(s[o],i,a,n)}return q(s[o])}r+=De(s[o],s[o+1],n)}return q(s[s.length-1])}class Ae{constructor(){this._points=[]}add(e){this._points.push(e),this.reorderPointsByPositionInLine()}reorderPointsByPositionInLine(){this._points.sort(((e,t)=>e.positionInLine<t.positionInLine?-1:e.positionInLine>t.positionInLine?1:0))}get points(){return this._points}toString(){const e=[];return this._points.forEach((t=>{e.push(t.toString)})),`[${e.join("],[")}]`}toJSONFeatureCollection(){const e=[];return this._points.forEach(((t,n)=>{e.push(`{ "type": "Feature", "properties": { "index": ${n} }, "geometry": { "type": "MultiPoint", "coordinates": [ [ ${t.toString}  ] ] } }`)})),`{\n      "type": "FeatureCollection",\n      "name": "multipoint",\n      "crs": { "type": "name", "properties": { "name": "urn:ogc:def:crs:OGC:1.3:CRS84" } },\n      "features": [\n        ${e.join(",")}\n      ]\n    }`}}class Me extends b{constructor(e,t,n){super(e,t),this._positionInLine=n}get positionInLine(){return this._positionInLine}static create(e,t){const n=e.split(" ");return new Me(new F(parseFloat(n[0])),new T(parseFloat(n[1])),t)}}var je;let Be=je=class{execute(e){const t=U(JSON.parse(`\n      {\n        "type": "LineString",\n        "coordinates": [${e.toString()}]\n      }`)),n=_e(t,{units:"meters"}),s=this.calculateDistanceBetweenPoints(n),r=new Ae;return s>0?this.getIntermediatePoints(t,n,s).forEach((e=>{r.add(e)})):r.add(this.getFirstNode(e)),this.getAllNodesExceptFirst(e).forEach((e=>{r.add(e)})),r}calculateDistanceBetweenPoints(e){return Math.floor(e/je.INTERMEDIATE_POINTS_IN_LINE)}getIntermediatePoints(e,t,n){let s;const r=[];for(let o=0;o<t;o+=n)s=ke(e,o,{units:"meters"}),r.push(Me.create(`${s.geometry.coordinates[0]} ${s.geometry.coordinates[1]}`,o));return r}getFirstNode(e){const t=U(JSON.parse(`\n    {\n      "type": "LineString",\n      "coordinates": [${e.subLine(0)}]\n    }`));return Me.create(`${e.value[0].longitude.value} ${e.value[0].latitude.value}`,_e(t,{units:"meters"}))}getAllNodesExceptFirst(e){const t=[];for(let n=1;n<e.value.length;n++){const s=U(JSON.parse(`\n      {\n        "type": "LineString",\n        "coordinates": [${e.subLine(n)}]\n      }`));t.push(Me.create(`${e.value[n].longitude.value} ${e.value[n].latitude.value}`,_e(s,{units:"meters"})))}return t}};Be.INTERMEDIATE_POINTS_IN_LINE=100,Be=je=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R()],Be);var $e=Be;class Ne{constructor(e,t,n,s){this._line=e,this._linePoints=t,this._wpsEndpoint=n,this._mdeLayerFullname=s}get line(){return this._line}get linePoints(){return this._linePoints}get wpsEndpoint(){return this._wpsEndpoint}get mdeLayerFullname(){return this._mdeLayerFullname}get mdeLayerShortname(){return this._mdeLayerFullname.value.indexOf(":")<0?this._mdeLayerFullname.value:this._mdeLayerFullname.value.split(":")[1]}get fullWpsEndpoint(){return`${this.wpsEndpoint.value}&request=Execute&identifier=gs:IntersectionFeatureCollection`}get xmlInput(){return`<?xml version="1.0" encoding="UTF-8"?>\n\n\n    \x3c!-- IntersectionFeatureCollection --\x3e\n    <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n      <ows:Identifier>gs:IntersectionFeatureCollection</ows:Identifier>\n      <wps:DataInputs>\n        <wps:Input>\n          <ows:Identifier>first feature collection</ows:Identifier>\n          <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n            <wps:Body>\n          \n          \n    \x3c!-- BufferFeatureCollection --\x3e\n    <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n      <ows:Identifier>vec:BufferFeatureCollection</ows:Identifier>\n      <wps:DataInputs>\n        <wps:Input>\n          <ows:Identifier>features</ows:Identifier>\n          <wps:Data>\n            <wps:ComplexData mimeType="application/json"><![CDATA[\n              ${this._linePoints.toJSONFeatureCollection()}\n            ]]></wps:ComplexData>\n          </wps:Data>\n        </wps:Input>\n        <wps:Input>\n          <ows:Identifier>distance</ows:Identifier>\n          <wps:Data>\n            <wps:LiteralData>0.0000001</wps:LiteralData>\n          </wps:Data>\n        </wps:Input>\n      </wps:DataInputs>\n      <wps:ResponseForm>\n        <wps:RawDataOutput mimeType="application/json">\n          <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n      </wps:ResponseForm>\n    </wps:Execute>\n    \x3c!-- /BufferFeatureCollection --\x3e\n    \n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n        <wps:Input>\n          <ows:Identifier>second feature collection</ows:Identifier>\n          <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n            <wps:Body>\n    \n    \n              \x3c!-- PolygonExtraction --\x3e\n              <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                <ows:Identifier>ras:PolygonExtraction</ows:Identifier>\n                <wps:DataInputs>\n                  <wps:Input>\n                    <ows:Identifier>data</ows:Identifier>\n                    <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wps" method="POST">\n                      <wps:Body>\n                          \n    \n    \n                        \x3c!-- CropCoverage --\x3e\n                        <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                          <ows:Identifier>ras:CropCoverage</ows:Identifier>\n                          <wps:DataInputs>\n                            <wps:Input>\n                              <ows:Identifier>coverage</ows:Identifier>\n                              <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wcs" method="POST">\n                                <wps:Body>\n                                  <wcs:GetCoverage service="WCS" version="1.1.1">\n                                    <ows:Identifier>${this._mdeLayerFullname.value}</ows:Identifier>\n                                    <wcs:DomainSubset>\n                                      <ows:BoundingBox crs="http://www.opengis.net/gml/srs/epsg.xml#4326">\n                                        <ows:LowerCorner>-74.000000946 -55.666705466</ows:LowerCorner>\n                                        <ows:UpperCorner>-53.499547847 -21.666460109</ows:UpperCorner>\n                                      </ows:BoundingBox>\n                                    </wcs:DomainSubset>\n                                    <wcs:Output format="image/tiff"/>\n                                  </wcs:GetCoverage>\n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                            <wps:Input>\n                              <ows:Identifier>cropShape</ows:Identifier>\n                              <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n                                <wps:Body>\n    \n    \n                                    \x3c!-- Buffer --\x3e\n                                    <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                                            <ows:Identifier>geo:buffer</ows:Identifier>\n                                            <wps:DataInputs>\n                                                <wps:Input>\n                                                <ows:Identifier>geom</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:ComplexData mimeType="application/json">\n                                                      <![CDATA[{\n                                                        "geometry": { "type": "MultiPoint", "coordinates": [${this._linePoints.toString()}]\n                                                      } }]]>\n                                                    </wps:ComplexData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>distance</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>0.003</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>capStyle</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>Square</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                            </wps:DataInputs>\n                                            <wps:ResponseForm>\n                                                <wps:RawDataOutput mimeType="application/json">\n                                                <ows:Identifier>result</ows:Identifier>\n                                                </wps:RawDataOutput>\n                                            </wps:ResponseForm>\n                                    </wps:Execute>\n                                    \x3c!-- Buffer --\x3e\n    \n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                          </wps:DataInputs>\n                          <wps:ResponseForm>\n                            <wps:RawDataOutput mimeType="image/tiff">\n                              <ows:Identifier>result</ows:Identifier>\n                            </wps:RawDataOutput>\n                          </wps:ResponseForm>\n                        </wps:Execute>\n                        \x3c!-- /CropCoverage --\x3e\n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>roi</ows:Identifier>\n                    <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n                      <wps:Body>\n    \n    \n                          \x3c!-- Buffer --\x3e\n                          <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                                <ows:Identifier>geo:buffer</ows:Identifier>\n                                <wps:DataInputs>\n                                    <wps:Input>\n                                    <ows:Identifier>geom</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:ComplexData mimeType="application/json">\n                                          <![CDATA[{\n                                            "geometry": { "type": "MultiPoint", "coordinates": [${this._linePoints.toString()}]\n                                          } }]]>\n                                        </wps:ComplexData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>distance</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>0.001</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>capStyle</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>Square</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                </wps:DataInputs>\n                                <wps:ResponseForm>\n                                    <wps:RawDataOutput mimeType="application/json">\n                                    <ows:Identifier>result</ows:Identifier>\n                                    </wps:RawDataOutput>\n                                </wps:ResponseForm>\n                          </wps:Execute>\n                          \x3c!-- Buffer --\x3e\n    \n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>band</ows:Identifier>\n                    <wps:Data>\n                      <wps:LiteralData>0</wps:LiteralData>\n                    </wps:Data>\n                  </wps:Input>\n                </wps:DataInputs>\n                <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType="application/json">\n                    <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                </wps:ResponseForm>\n              </wps:Execute>\n              \x3c!-- /PolygonExtraction --\x3e\n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n      </wps:DataInputs>\n      <wps:ResponseForm>\n        <wps:RawDataOutput mimeType="application/json">\n          <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n      </wps:ResponseForm>\n    </wps:Execute>\n    \x3c!-- /IntersectionFeatureCollection --\x3e`}}Ne.MAX_LENGHT_ALLOWED=100,Ne.FIELDS=JSON.parse('[\n      {\n        "name": "Capa",\n        "element": "select",\n        "references": "drawedLayers",\n        "allowedTypes": ["line"],\n        "points": ["ne", "sw"]\n      }\n    ]');let We=class{ensureInputDataIsInTolerance(e){}};We=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R()],We);var Ue,qe=We;!function(e){e[e.LineString3D=0]="LineString3D",e[e.FeatureCollectionOfLines=1]="FeatureCollectionOfLines"}(Ue||(Ue={}));class Ve extends E{constructor(e){super(e)}}class Xe{constructor(e,t,n){this._longitude=e,this._latitude=t,this._height=n}get value(){return[this._longitude,this._latitude,this._height]}get longitude(){return this._longitude}get latitude(){return this._latitude}get height(){return this._height}get toString(){return`${this._longitude.value},${this._latitude.value},${this._height.value}`}get toString2D(){return`${this._longitude.value},${this._latitude.value}`}toProcessString(){return`${this._longitude.value} ${this._latitude.value} ${this._height.value}`}static createFromString(e){const t=e.split(" ");return new Xe(new F(parseFloat(t[0])),new T(parseFloat(t[1])),new Ve(parseFloat(t[2])))}}class Ge{constructor(e){this._value=e}static createFromString(e){const t=[];return e.trim().replace("\n","").replace("  "," ").replace("  "," ").split(",").forEach((e=>{const n=e.trim().split(" ");t.push(new Xe(new F(parseFloat(n[0])),new T(parseFloat(n[1])),new T(parseFloat(n[2]))))})),new Ge(t)}get value(){return this._value}toString(){const e=[];return this.value.forEach((t=>{e.push(t.toString)})),`[${e.join("],[")}]`}toProcessString(){const e=[];return this.value.forEach((t=>{e.push(t.toProcessString())})),`${e.join(",")}`}toLineString3D(){return'{ "type": "LineString", "coordinates": ['+this.toString()+"] }"}toFeatureCollection(){const e=[];for(let t=1;t<this._value.length;t++)e[t-1]=`{\n        "type": "Feature",\n        "geometry": {\n          "type": "MultiLineString",\n          "coordinates": [\n            [\n              [ ${this._value[t-1].toString2D} ], [ ${this._value[t].toString2D} ]\n            ]\n          ]\n        },\n        "properties": {\n          "index": ${t},\n          "initial_height": ${this._value[t-1].height.value},\n          "final_height": ${this._value[t].height.value}\n        },\n        "id": "${t-1}"\n      }`;return`{\n      "type": "FeatureCollection",\n      "features": [ ${e.join(",")} ]\n    }`}}var Je=function(e,t){return function(n,s){t(n,s,e)}};let Qe=class{constructor(e,t){this.postman=e,this.tolaranceChecker=t}getFields(){return Ne.FIELDS}execute(e,t){return n=this,s=void 0,o=function*(){this.ensureInputDataIsInTolerance(e);const n=yield this.postman.post(e.fullWpsEndpoint,e.xmlInput),s=this.generateLine3DFromResponse(e,n);return this.formatResponse(s,t)},new((r=void 0)||(r=Promise))((function(e,t){function i(e){try{p(o.next(e))}catch(e){t(e)}}function a(e){try{p(o.throw(e))}catch(e){t(e)}}function p(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,a)}p((o=o.apply(n,s||[])).next())}));var n,s,r,o}ensureInputDataIsInTolerance(e){this.tolaranceChecker.ensureInputDataIsInTolerance(e)}generateLine3DFromResponse(e,t){const n=t,s=[];if(n.features.sort(((e,t)=>e.properties.feature_index<t.properties.feature_index?-1:e.properties.feature_index>t.properties.feature_index?1:0)),e.linePoints.points.forEach((function(t,r){for(const o in n.features)if(n.features[o].properties.feature_index==r){s.push(new Xe(t.longitude,t.latitude,new Ve(n.features[r].properties[e.mdeLayerShortname+"_value"])));break}})),1==s.length){const t=e.linePoints.points[e.linePoints.points.length-1];s.push(new Xe(t.longitude,t.latitude,new Ve(n.features[0].properties[e.mdeLayerShortname+"_value"])))}return new Ge(s)}formatResponse(e,t){return t===Ue.FeatureCollectionOfLines?JSON.parse(e.toFeatureCollection()):JSON.parse(e.toLineString3D())}};Qe=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R(),Je(0,S("Postman")),Je(1,S("ElevationProfileToleranceChecker"))],Qe);var He=Qe;_.register("Postman",{useClass:j}),_.register("ElevationProfileToleranceChecker",{useClass:qe}),_.register("LineToPointsInterval",{useClass:$e});let Ke=class{constructor(e,t,n,s){this.host=e,this.mdeLayerFullname=t,this.lineToPoint=new $e,this.service=s||_.resolve(He)}getFields(){return this.service.getFields()}execute(e,t=Ue.LineString3D){return n=this,s=void 0,o=function*(){const n=Oe.createFromString(e),s=new Ne(n,this.lineToPoint.execute(n),new A(this.host),new O(this.mdeLayerFullname));return this.service.execute(s,t)},new((r=void 0)||(r=Promise))((function(e,t){function i(e){try{p(o.next(e))}catch(e){t(e)}}function a(e){try{p(o.throw(e))}catch(e){t(e)}}function p(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,a)}p((o=o.apply(n,s||[])).next())}));var n,s,r,o}};var Ye,ze;Ke=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R(),(Ye=2,ze=S("LineToPointsInterval"),function(e,t){ze(e,t,Ye)})],Ke);var Ze=Ke;class et{constructor(e,t,n,s){this._line=e,this._linePoints=t,this._wpsEndpoint=n,this._mdeLayerFullname=s}get line(){return this._line}get linePoints(){return this._linePoints}get wpsEndpoint(){return this._wpsEndpoint}get mdeLayerFullname(){return this._mdeLayerFullname}get mdeLayerShortname(){return this._mdeLayerFullname.value.indexOf(":")<0?this._mdeLayerFullname.value:this._mdeLayerFullname.value.split(":")[1]}get fullWpsEndpoint(){return`${this.wpsEndpoint.value}&request=Execute&identifier=gs:IntersectionFeatureCollection`}fullWmsEndpoint(e){return`${this.wpsEndpoint.value}\n      &REQUEST=GetFeatureInfo\n      &QUERY_LAYERS=${this._mdeLayerFullname.value}\n      &LAYERS=${this._mdeLayerFullname.value}\n      &INFO_FORMAT=application%2Fjson\n      &FEATURE_COUNT=1\n      &X=1\n      &Y=1\n      &SRS=EPSG%3A4326\n      &WIDTH=1\n      &HEIGHT=1\n      &BBOX=${e.longitude.value}%2C${e.latitude.value}%2C${e.moveLongitude.value}%2C${e.moveLatitude.value}`}get xmlInput(){return`<?xml version="1.0" encoding="UTF-8"?>\n\n\n    \x3c!-- IntersectionFeatureCollection --\x3e\n    <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n      <ows:Identifier>gs:IntersectionFeatureCollection</ows:Identifier>\n      <wps:DataInputs>\n        <wps:Input>\n          <ows:Identifier>first feature collection</ows:Identifier>\n          <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n            <wps:Body>\n          \n          \n    \x3c!-- BufferFeatureCollection --\x3e\n    <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n      <ows:Identifier>vec:BufferFeatureCollection</ows:Identifier>\n      <wps:DataInputs>\n        <wps:Input>\n          <ows:Identifier>features</ows:Identifier>\n          <wps:Data>\n            <wps:ComplexData mimeType="application/json"><![CDATA[\n              ${this._linePoints.toJSONFeatureCollection()}\n            ]]></wps:ComplexData>\n          </wps:Data>\n        </wps:Input>\n        <wps:Input>\n          <ows:Identifier>distance</ows:Identifier>\n          <wps:Data>\n            <wps:LiteralData>0.0000001</wps:LiteralData>\n          </wps:Data>\n        </wps:Input>\n      </wps:DataInputs>\n      <wps:ResponseForm>\n        <wps:RawDataOutput mimeType="application/json">\n          <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n      </wps:ResponseForm>\n    </wps:Execute>\n    \x3c!-- /BufferFeatureCollection --\x3e\n    \n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n        <wps:Input>\n          <ows:Identifier>second feature collection</ows:Identifier>\n          <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n            <wps:Body>\n    \n    \n              \x3c!-- PolygonExtraction --\x3e\n              <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                <ows:Identifier>ras:PolygonExtraction</ows:Identifier>\n                <wps:DataInputs>\n                  <wps:Input>\n                    <ows:Identifier>data</ows:Identifier>\n                    <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wps" method="POST">\n                      <wps:Body>\n                          \n    \n    \n                        \x3c!-- CropCoverage --\x3e\n                        <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                          <ows:Identifier>ras:CropCoverage</ows:Identifier>\n                          <wps:DataInputs>\n                            <wps:Input>\n                              <ows:Identifier>coverage</ows:Identifier>\n                              <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wcs" method="POST">\n                                <wps:Body>\n                                  <wcs:GetCoverage service="WCS" version="1.1.1">\n                                    <ows:Identifier>${this._mdeLayerFullname.value}</ows:Identifier>\n                                    <wcs:DomainSubset>\n                                      <ows:BoundingBox crs="http://www.opengis.net/gml/srs/epsg.xml#4326">\n                                        <ows:LowerCorner>-74.000000946 -55.666705466</ows:LowerCorner>\n                                        <ows:UpperCorner>-53.499547847 -21.666460109</ows:UpperCorner>\n                                      </ows:BoundingBox>\n                                    </wcs:DomainSubset>\n                                    <wcs:Output format="image/tiff"/>\n                                  </wcs:GetCoverage>\n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                            <wps:Input>\n                              <ows:Identifier>cropShape</ows:Identifier>\n                              <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n                                <wps:Body>\n    \n    \n                                    \x3c!-- Buffer --\x3e\n                                    <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                                            <ows:Identifier>geo:buffer</ows:Identifier>\n                                            <wps:DataInputs>\n                                                <wps:Input>\n                                                <ows:Identifier>geom</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:ComplexData mimeType="application/json">\n                                                      <![CDATA[{\n                                                        "geometry": { "type": "MultiPoint", "coordinates": [${this._linePoints.toString()}]\n                                                      } }]]>\n                                                    </wps:ComplexData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>distance</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>0.003</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>capStyle</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>Square</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                            </wps:DataInputs>\n                                            <wps:ResponseForm>\n                                                <wps:RawDataOutput mimeType="application/json">\n                                                <ows:Identifier>result</ows:Identifier>\n                                                </wps:RawDataOutput>\n                                            </wps:ResponseForm>\n                                    </wps:Execute>\n                                    \x3c!-- Buffer --\x3e\n    \n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                          </wps:DataInputs>\n                          <wps:ResponseForm>\n                            <wps:RawDataOutput mimeType="image/tiff">\n                              <ows:Identifier>result</ows:Identifier>\n                            </wps:RawDataOutput>\n                          </wps:ResponseForm>\n                        </wps:Execute>\n                        \x3c!-- /CropCoverage --\x3e\n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>roi</ows:Identifier>\n                    <wps:Reference mimeType="application/json" xlink:href="http://geoserver/wps" method="POST">\n                      <wps:Body>\n    \n    \n                          \x3c!-- Buffer --\x3e\n                          <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                                <ows:Identifier>geo:buffer</ows:Identifier>\n                                <wps:DataInputs>\n                                    <wps:Input>\n                                    <ows:Identifier>geom</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:ComplexData mimeType="application/json">\n                                          <![CDATA[{\n                                            "geometry": { "type": "MultiPoint", "coordinates": [${this._linePoints.toString()}]\n                                          } }]]>\n                                        </wps:ComplexData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>distance</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>0.001</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>capStyle</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>Square</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                </wps:DataInputs>\n                                <wps:ResponseForm>\n                                    <wps:RawDataOutput mimeType="application/json">\n                                    <ows:Identifier>result</ows:Identifier>\n                                    </wps:RawDataOutput>\n                                </wps:ResponseForm>\n                          </wps:Execute>\n                          \x3c!-- Buffer --\x3e\n    \n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>band</ows:Identifier>\n                    <wps:Data>\n                      <wps:LiteralData>0</wps:LiteralData>\n                    </wps:Data>\n                  </wps:Input>\n                </wps:DataInputs>\n                <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType="application/json">\n                    <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                </wps:ResponseForm>\n              </wps:Execute>\n              \x3c!-- /PolygonExtraction --\x3e\n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n      </wps:DataInputs>\n      <wps:ResponseForm>\n        <wps:RawDataOutput mimeType="application/json">\n          <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n      </wps:ResponseForm>\n    </wps:Execute>\n    \x3c!-- /IntersectionFeatureCollection --\x3e`}}et.MAX_LENGHT_ALLOWED=100,et.FIELDS=JSON.parse('[\n      {\n        "name": "Capa",\n        "element": "select",\n        "references": "drawedLayers",\n        "allowedTypes": ["line"],\n        "points": ["ne", "sw"]\n      }\n    ]');let tt=class{ensureInputDataIsInTolerance(e){}};tt=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R()],tt);var nt,st=tt;!function(e){e[e.LineString3D=0]="LineString3D",e[e.FeatureCollectionOfLines=1]="FeatureCollectionOfLines"}(nt||(nt={}));var rt=function(e,t){return function(n,s){t(n,s,e)}},ot=function(e,t,n,s){return new(n||(n=Promise))((function(r,o){function i(e){try{p(s.next(e))}catch(e){o(e)}}function a(e){try{p(s.throw(e))}catch(e){o(e)}}function p(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}p((s=s.apply(e,t||[])).next())}))};let it=class{constructor(e,t){this.postman=e,this.tolaranceChecker=t}getFields(){return et.FIELDS}execute(e,t){return ot(this,void 0,void 0,(function*(){let t;this.ensureInputDataIsInTolerance(e);const n=e.linePoints.points.map((n=>ot(this,void 0,void 0,(function*(){return t=yield this.postman.get(e.fullWmsEndpoint(n)),new Xe(n.longitude,n.latitude,new Ve(Number(Object.values(t.features[0].properties)[0])))})))),s=yield Promise.all(n);return JSON.parse(new Ge(s).toLineString3D())}))}ensureInputDataIsInTolerance(e){this.tolaranceChecker.ensureInputDataIsInTolerance(e)}generateLine3DFromResponse(e,t){const n=t,s=[];if(n.features.sort(((e,t)=>e.properties.feature_index<t.properties.feature_index?-1:e.properties.feature_index>t.properties.feature_index?1:0)),e.linePoints.points.forEach((function(t,r){for(const o in n.features)if(n.features[o].properties.feature_index==r){s.push(new Xe(t.longitude,t.latitude,new Ve(n.features[r].properties[e.mdeLayerShortname+"_value"])));break}})),1==s.length){const t=e.linePoints.points[e.linePoints.points.length-1];s.push(new Xe(t.longitude,t.latitude,new Ve(n.features[0].properties[e.mdeLayerShortname+"_value"])))}return new Ge(s)}formatResponse(e,t){return t===nt.FeatureCollectionOfLines?JSON.parse(e.toFeatureCollection()):JSON.parse(e.toLineString3D())}};it=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R(),rt(0,S("Postman")),rt(1,S("ElevationProfileToleranceChecker"))],it);var at=it;_.register("Postman",{useClass:j}),_.register("ElevationProfileToleranceChecker",{useClass:st}),_.register("LineToPointsInterval",{useClass:$e});let pt=class{constructor(e,t,n,s){this.host=e,this.mdeLayerFullname=t,this.lineToPoint=new $e,this.service=s||_.resolve(at)}getFields(){return this.service.getFields()}execute(e,t=nt.LineString3D){return n=this,s=void 0,o=function*(){const n=Oe.createFromString(e),s=new et(n,this.lineToPoint.execute(n),new A(this.host),new O(this.mdeLayerFullname));return this.service.execute(s,t)},new((r=void 0)||(r=Promise))((function(e,t){function i(e){try{p(o.next(e))}catch(e){t(e)}}function a(e){try{p(o.throw(e))}catch(e){t(e)}}function p(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,a)}p((o=o.apply(n,s||[])).next())}));var n,s,r,o}};pt=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R(),function(e,t){return function(n,s){t(n,s,e)}}(2,S("LineToPointsInterval"))],pt);var wt=pt;class ut{status(){return"Ok"}}class lt extends E{constructor(e){super(e),this.ensureIsValidLevel()}ensureIsValidLevel(){if(this.value<0||this.value>1e4)throw RangeError("The equidistance must be between 0 and 10000")}}class ct{constructor(e,t,n,s,r){this.ensureValidOutputFormat(r),this._polygon=e,this._level=t,this._wpsEndpoint=n,this._mdeLayerFullname=s,this._outputFormat=r}ensureValidOutputFormat(e){if(!["image/png","image/jpeg","image/tiff"].includes(e))throw RangeError("Invalid output format")}get polygon(){return this._polygon}get level(){return this._level}get wpsEndpoint(){return this._wpsEndpoint}rectangle(){return this._polygon.toString()}get fullWpsEndpoint(){return`${this.wpsEndpoint.value}&request=Execute&identifier=ras:PolygonExtraction`}get xmlInput(){return`<?xml version="1.0" encoding="UTF-8"?><wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n    <ows:Identifier>ras:RangeLookup</ows:Identifier>\n    <wps:DataInputs>\n      <wps:Input>\n        <ows:Identifier>coverage</ows:Identifier>\n        <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wps" method="POST">\n          <wps:Body>\n            \n              <wps:Execute version="1.0.0" service="WPS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wps/1.0.0" xmlns:wfs="http://www.opengis.net/wfs" xmlns:wps="http://www.opengis.net/wps/1.0.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wcs="http://www.opengis.net/wcs/1.1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd">\n                  <ows:Identifier>ras:CropCoverage</ows:Identifier>\n                  <wps:DataInputs>\n                  <wps:Input>\n                      <ows:Identifier>coverage</ows:Identifier>\n                      <wps:Reference mimeType="image/tiff" xlink:href="http://geoserver/wcs" method="POST">\n                      <wps:Body>\n                          <wcs:GetCoverage service="WCS" version="1.1.1">\n                          <ows:Identifier>${this._mdeLayerFullname.value}</ows:Identifier>\n                          <wcs:DomainSubset>\n                              <ows:BoundingBox crs="http://www.opengis.net/gml/srs/epsg.xml#4326">\n                              <ows:LowerCorner>-74.000000946 -59.483427301014075</ows:LowerCorner>\n                              <ows:UpperCorner>-26.233442340289727 -21.666460109</ows:UpperCorner>\n                              </ows:BoundingBox>\n                          </wcs:DomainSubset>\n                          <wcs:Output format="image/tiff"/>\n                          </wcs:GetCoverage>\n                      </wps:Body>\n                      </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                      <ows:Identifier>cropShape</ows:Identifier>\n                      <wps:Data>\n                      <wps:ComplexData mimeType="application/json">\n                        <![CDATA[{\n                          "geometry": {\n                          "type": "Polygon",\n                          "coordinates": [ ${this.rectangle()} ] }\n                        }]]></wps:ComplexData>\n                      </wps:Data>\n                  </wps:Input>\n                  </wps:DataInputs>\n                  <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType="image/tiff">\n                      <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                  </wps:ResponseForm>\n              </wps:Execute>\n\n          </wps:Body>\n        </wps:Reference>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>ranges</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>[-9999;${this._level.value}]</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n    </wps:DataInputs>\n    <wps:ResponseForm>\n      <wps:RawDataOutput mimeType="${this._outputFormat}">\n        <ows:Identifier>reclassified</ows:Identifier>\n      </wps:RawDataOutput>\n    </wps:ResponseForm>\n  </wps:Execute>`}}ct.MAX_AREA_ALLOWED=1e8,ct.FIELDS=JSON.parse('[\n      {\n        "name": "Capa",\n        "element": "select",\n        "references": "drawedLayers",\n        "allowedTypes": ["rectangle"],\n        "points": ["ne", "sw"]\n      },\n      {\n        "name": "Cota",\n        "element": "input",\n        "type": "number",\n        "min": 0,\n        "max": 10000\n      }\n    ]');let ft=class{ensureInputDataIsInTolerance(e){if(z(this.pointsToPolygon(e.polygon))>ct.MAX_AREA_ALLOWED)throw RangeError("The area requested must be less than 100km2")}pointsToPolygon(e){return V(e.coordinates())}};ft=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R()],ft);var ht=ft,gt=function(e,t){return function(n,s){t(n,s,e)}};let dt=class{constructor(e,t){this.postman=e,this.tolaranceChecker=t}getFields(){return ct.FIELDS}execute(e){return t=this,n=void 0,r=function*(){return this.ensureInputDataIsInTolerance(e),yield this.postman.postReturningBlob(e.fullWpsEndpoint,e.xmlInput)},new((s=void 0)||(s=Promise))((function(e,o){function i(e){try{p(r.next(e))}catch(e){o(e)}}function a(e){try{p(r.throw(e))}catch(e){o(e)}}function p(t){var n;t.done?e(t.value):(n=t.value,n instanceof s?n:new s((function(e){e(n)}))).then(i,a)}p((r=r.apply(t,n||[])).next())}));var t,n,s,r}ensureInputDataIsInTolerance(e){this.tolaranceChecker.ensureInputDataIsInTolerance(e)}};dt=function(e,t,n,s){var r,o=arguments.length,i=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}([R(),gt(0,S("Postman")),gt(1,S("WaterRiseToleranceChecker"))],dt);var mt=dt;_.register("Postman",{useClass:j}),_.register("WaterRiseToleranceChecker",{useClass:ht});class yt{constructor(e,t,n){this.host=e,this.mdeLayerFullname=t,this.service=n||_.resolve(mt)}getFields(){return this.service.getFields()}execute(e,t,n="image/png"){return s=this,r=void 0,i=function*(){const s=new ct(k.createFromString(e),new lt(t),new A(this.host),new O(this.mdeLayerFullname),n);return this.service.execute(s)},new((o=void 0)||(o=Promise))((function(e,t){function n(e){try{p(i.next(e))}catch(e){t(e)}}function a(e){try{p(i.throw(e))}catch(e){t(e)}}function p(t){var s;t.done?e(t.value):(s=t.value,s instanceof o?s:new o((function(e){e(s)}))).then(n,a)}p((i=i.apply(s,r||[])).next())}));var s,r,o,i}}}(),GeoserviceFactory=s}();
//# sourceMappingURL=main.js.map